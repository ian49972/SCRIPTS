local player = game.Players.LocalPlayer
local ws = game.Workspace
local TS = game:GetService("TweenService")
local Run = game:GetService("RunService")

if not isfile("Weak.mp3") then
writefile("Weak.mp3", game:HttpGet("https://github.com/ian49972/smth/raw/refs/heads/main/Weak.mp3"))
end

local Object = game:GetObjects("rbxassetid://104928991202331")[1]
Object.Parent = ws

local userSeq = Object:FindFirstChild("User")
local victimSeq = Object:FindFirstChild("Victim")

local function CloneMe(char)
    char.Archivable = true
    local c = char:Clone()
    char.Archivable = false
    return c
end

local function PlayKeyframeSequence(Model, Seq, Speed)
    Speed = Speed or 1
    local All = {}
    for _, kf in Seq:GetKeyframes() do
        table.insert(All, {Time = kf.Time, KF = kf})
    end
    table.sort(All, function(a,b) return a.Time < b.Time end)

    local tweens, motors, vals, poses = {}, {}, {}, {}

    local function GetMotor(pose)
        for _, m in Model:GetDescendants() do
            if m:IsA("Motor6D") and m.Part1 and m.Part1.Name == pose.Name and m.Part0 and m.Part0.Name == pose.Parent.Name then
                return m
            end
        end
    end

    for i, k in ipairs(All) do
        poses[i] = {Time = k.Time, P = {}}
        for _, p in k.KF:GetDescendants() do
            if p:IsA("Pose") and p.Weight > 0 then
                local m = motors[p.Name] or GetMotor(p)
                if m then
                    motors[p.Name] = m
                    if not vals[p.Name] then
                        local v = Instance.new("CFrameValue")
                        v.Name = "MotorValue"
                        v.Parent = m
                        vals[p.Name] = v
                    end
                    poses[i].P[p.Name] = {M = m, P = p}
                end
            end
        end
    end

    if #poses > 1 then
        local last = {}
        for i = 1, #poses-1 do
            local a, b = poses[i], poses[i+1]
            local dur = (b.Time - a.Time) / Speed
            tweens[i] = {D = dur, T = {}}
            for n,d in pairs(a.P) do last[n] = d end
            for n,d in pairs(b.P) do
                if last[n] then
                    local ti = TweenInfo.new(dur, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut)
                    tweens[i].T[n] = TS:Create(vals[n], ti, {Value = d.P.CFrame})
                end
            end
        end
    end

    local function len() return poses[#poses] and poses[#poses].Time / Speed or 0 end
    local function play()
        for _, t in tweens do
            for _, tw in t.T do tw:Play() end
            task.wait(t.D)
        end
    end

    local conn = Run.Heartbeat:Connect(function()
        for n,m in pairs(motors) do
            if vals[n] and vals[n].Value then m.Transform = vals[n].Value end
        end
    end)

    task.spawn(play)

    return {
        getLength = len,
        stop = function()
            conn:Disconnect()
            for _, t in tweens do for _, tw in t.T do tw:Cancel() end end
        end
    }
end

local tool = Instance.new("Tool")
tool.Name = "One Inch Punch"
local handle = Instance.new("Part")
handle.Name = "Handle"
handle.Size = Vector3.new(0.1,0.1,0.1)
handle.Transparency = 1
handle.CanCollide = false
handle.Parent = tool
tool.Parent = player.Backpack

tool.Activated:Connect(function()
    local char = player.Character or player.CharacterAdded:Wait()
    local hrp = char:FindFirstChild("HumanoidRootPart")
    local hum = char:FindFirstChild("Humanoid")
    local head = char:FindFirstChild("Head")
    if not (hrp and hum and head) then return end

    local target, dist = nil, 20
    for _, p in game.Players:GetPlayers() do
        if p ~= player and p.Character then
            local t = p.Character:FindFirstChild("HumanoidRootPart")
            if t then
                local d = (hrp.Position - t.Position).Magnitude
                if d < dist then dist = d target = p end
            end
        end
    end
    if not target then return end

    local vchar = target.Character
    local vhrp = vchar:FindFirstChild("HumanoidRootPart")
    if not vhrp then return end

    local anim = hum:FindFirstChild("Animator")
    if anim then anim:Destroy() end

    local clone = CloneMe(vchar)
    clone.Parent = ws
    local chrp = clone:FindFirstChild("HumanoidRootPart")
    if chrp then
        chrp.CFrame = hrp.CFrame * CFrame.new(0, 0, -4) * CFrame.Angles(0, math.rad(180), 0)
    end

    local weld = Instance.new("WeldConstraint")
    weld.Part0 = hrp
    weld.Part1 = chrp
    weld.Parent = hrp

    local sound = Instance.new("Sound")
    sound.SoundId = getcustomasset("Weak.mp3")
    sound.Volume = 1
    sound.Parent = char
    sound.Looped = false
    sound:Play()

    local pAnim = PlayKeyframeSequence(char, userSeq, 1.2)
    local vAnim = PlayKeyframeSequence(clone, victimSeq, 1.2)

    task.wait(pAnim.getLength() + 3)

    pAnim.stop()
    vAnim.stop()
    Instance.new("Animator", hum)
    weld:Destroy()
    clone:Destroy()
end)
